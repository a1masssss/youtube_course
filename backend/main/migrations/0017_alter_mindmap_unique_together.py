# Generated by Django 5.2.1 on 2025-06-16 10:33

from django.conf import settings
from django.db import migrations


def remove_duplicate_mindmaps(apps, schema_editor):
    """Remove duplicate mindmaps keeping only the first one for each user-video pair"""
    MindMap = apps.get_model('main', 'MindMap')
    
    # Get all user-video combinations that have duplicates
    from django.db.models import Count
    duplicates = (MindMap.objects
                 .values('user', 'mindmap_video')
                 .annotate(count=Count('id'))
                 .filter(count__gt=1))
    
    for duplicate in duplicates:
        user_id = duplicate['user']
        video_id = duplicate['mindmap_video']
        
        # Get all mindmaps for this user-video pair
        mindmaps = MindMap.objects.filter(
            user_id=user_id, 
            mindmap_video_id=video_id
        ).order_by('id')  # Order by id to keep the first one
        
        # Delete all but the first one
        mindmaps_to_delete = mindmaps[1:]  # Skip the first one
        for mindmap in mindmaps_to_delete:
            mindmap.delete()
            
        print(f"Removed {len(mindmaps_to_delete)} duplicate mindmaps for user {user_id}, video {video_id}")


def reverse_remove_duplicates(apps, schema_editor):
    """Reverse function - nothing to do since we can't restore deleted data"""
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0016_quiz_correct_answers_count_quiz_is_completed_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        # First, remove duplicates
        migrations.RunPython(
            remove_duplicate_mindmaps,
            reverse_remove_duplicates,
        ),
        # Then apply the unique constraint
        migrations.AlterUniqueTogether(
            name='mindmap',
            unique_together={('user', 'mindmap_video')},
        ),
    ]
